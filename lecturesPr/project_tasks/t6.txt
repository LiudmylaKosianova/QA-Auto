Примітки від автора:

Це проєктне завдання розбито на дві частини:
Обов’язкова частина, з повним і детальним описом 
Індивідуальна частина, повна ідея та реалізація, якої залежить лише від вашої уяви та можливостей 
Ідея індивідуальної частини має максимально відрізнятися, де це звичайно можливо, від обов’язкової частини 
Немає поганих ідей для індивідуальної частини, проте намагайтеся підібрати ідею таким чином, 
щоб вона максимально продемонструвала ваші можливості і знання
Наприкінці обов'язкової частини проєктного завдання  можете знайти підказки для ідей індивідуальної частини.

Зверніть увагу, що деякі назви файлів у проєктних завданнях можуть відрізнятися від наведених у лекціях. 
Будьте уважні. Виконуйте згідно інструкцій в обов'язковій частині

Розробити тести для тестування графічного інтерфейсу GitHub, 
використовуючи при цьому модулі pytest і selenium, та архітектурний підхід до розробки тестів Page Object Model.

Обовязкова частина:

В склонованому репозиторії, використовуючи результати попереднього модуля, 
розробити тести, використовуючи модулі pytest та selenium, які відповідають наступним вимогам:

+ Мітка ui зареєстрована в pytest.ini файлі.
+ У каталозі modules/ui/page_object створити файл base_page.py, а в ньому клас BasePage. 
+ В конструкторі класу ініціалізувати об’єкт для комунікації з вебдрайвером.
+ Клас має метод об’єкта close, задача якого закрити відкритий браузер.
+ У каталозі modules/ui/page_object створити файл sign_in_page.py, а в ньому клас SignInPage. 
+ Клас SignInPage наслідуваний від BasePage класу.
+ В конструкторі класу викликати конструктор батьківського класу.
+ В класі реалізований метод об’єкту, який приймає параметри username і password. 
Задача методу ввести в поле email ім’я користувача, в поле password пароль 
і натиснути кнопку sign in.
+ В класі реалізований метод об’єкту, який перевіряє, чи відповідає заголовок сторінки очікуваному.
+ У каталогу tests/ui створити файл test_ui_page_object.py. А в ньому створити тест, який:
Має мітку ui.
Виконує такі кроки:
Відкриває сторінку Sign In.
Вводить некоректні дані в поля імені та пароля.
Перевіряє, що заголовок сторінки відповідає очікуваному.
Закриває браузер.

Підказки для індивідуальних завдань:

Автоматизувати тестування різних додаткових ресурсів, наприклад
Amazon
Rozetka
NovaPoshta
Тощо
Для того, щоб максимально розкрити свій досвід - намагайтеся не автоматизувати однотипні сценарії. 
Наприклад, зробіть тести для перевірки пошуку посилки в "Новій Пошті" та роботи з товарами в корзині "Розетки".